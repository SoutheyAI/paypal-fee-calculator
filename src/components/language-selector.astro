---
import { languages } from '../i18n/ui';
import { getLangFromUrl, getLocalizedPathname } from '../i18n/utils';

const url = Astro.url;
const currentLang = getLangFromUrl(url);
---

<div class="relative inline-block text-left">
  <div>
    <button type="button" class="inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" id="language-menu-button" aria-expanded="true" aria-haspopup="true">
      {languages[currentLang]}
      <svg class="-mr-1 ml-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
        <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
      </svg>
    </button>
  </div>

  <div class="hidden origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" role="menu" aria-orientation="vertical" aria-labelledby="language-menu-button" tabindex="-1" id="language-menu">
    <div class="py-1" role="none">
      {Object.entries(languages).map(([lang, label]) => (
        <a
          href={getLocalizedPathname(url.pathname, lang)}
          class={`
            block px-4 py-2 text-sm hover:bg-gray-100
            ${currentLang === lang ? 'bg-gray-100 text-gray-900' : 'text-gray-700'}
          `}
          role="menuitem"
          tabindex="-1"
        >
          {label}
        </a>
      ))}
    </div>
  </div>
</div>

<script>
  const button = document.getElementById('language-menu-button');
  const menu = document.getElementById('language-menu');

  button?.addEventListener('click', () => {
    const expanded = button.getAttribute('aria-expanded') === 'true';
    button.setAttribute('aria-expanded', (!expanded).toString());
    menu?.classList.toggle('hidden');
  });

  // Close the menu when clicking outside
  document.addEventListener('click', (event) => {
    if (!button?.contains(event.target as Node) && !menu?.contains(event.target as Node)) {
      button?.setAttribute('aria-expanded', 'false');
      menu?.classList.add('hidden');
    }
  });
</script>
