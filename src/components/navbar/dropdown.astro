---
import { Icon } from '@iconify/react';

interface Props {
  title: string;
  children: { title: string; path: string }[];
  lastItem?: boolean;
}

const { title, children, lastItem } = Astro.props;
---

<li class="relative dropdown-container">
  <button
    class="dropdown-button flex items-center gap-1 w-full lg:w-auto lg:px-3 py-2 text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white">
    <span>{title}</span>
    <Icon client:load icon="fluent:chevron-down-24-regular" className="w-4 h-4" />
  </button>

  <div
    class="dropdown-menu lg:absolute w-full lg:w-48 hidden lg:invisible lg:opacity-0 top-full lg:translate-y-2 left-0 rounded-md bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 p-2 lg:shadow-md">
    <ul class="space-y-2">
      {
        children.map((item) => (
          <li>
            <a
              href={item.path}
              class="block py-2 px-4 text-gray-600 hover:text-gray-900 hover:bg-gray-50 dark:text-gray-400 dark:hover:text-white dark:hover:bg-gray-700 rounded-md">
              {item.title}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</li>

<style>
  .dropdown-container:hover .dropdown-menu,
  .dropdown-button:focus + .dropdown-menu,
  .dropdown-menu:hover {
    @apply lg:visible lg:opacity-100;
    display: block;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const containers = document.querySelectorAll('.dropdown-container');
    
    containers.forEach(container => {
      const button = container.querySelector('.dropdown-button');
      const menu = container.querySelector('.dropdown-menu');
      
      button?.addEventListener('click', (e) => {
        e.stopPropagation();
        menu?.classList.toggle('hidden');
      });
    });

    // 点击其他地方时关闭所有下拉菜单
    document.addEventListener('click', () => {
      document.querySelectorAll('.dropdown-menu').forEach(menu => {
        menu.classList.add('hidden');
      });
    });
  });
</script>
